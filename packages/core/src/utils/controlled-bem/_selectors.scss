/* stylelint-disable scss/function-no-unknown */
@use "sass:map";
@use "sass:selector";
@use './globals.scss' as globals;

@function create-selector($initial, $type, $name, $config) {
  $selector: '';
  $prefix: null;

  @if $type == 'custom' {
    @return '#{$selector}#{$name}';
  }

  @if $type == 'block' {
    $blockPrefix: globals.get-block-prefix($config);
    $prefix: '.#{$blockPrefix}';
  }

  @if $type == 'modifier' {
    $modifierDelimeter: globals.get-modifier-delimeter($config);
    $prefix: '#{$modifierDelimeter}';
  }

  @if $type == 'element' {
    $elementDelimeter: globals.get-element-delimeter($config);
    $prefix: '#{$elementDelimeter}';
  }

  @if $type == 'class' {
    $prefix: '.';
  }

  @if $type == 'id' {
    $prefix: '#';
  }

  @if $type == 'dashed' {
    $prefix: '-';
  }

  /* stylelint-disable-next-line scss/at-if-no-null */
  @if $prefix != null {
    $selector: '#{$prefix}#{$name}';
  }

  @return $selector;
}

@function create-selector-with-override($initial, $type, $override) {
  $selector: '';
  $prefix: '';

  @if $type == 'custom' {
    @error "Custom entities cannot have an override";
    @return $selector;
  }

  @if $type == 'block' {
    $prefix: '.';
  }

  @if $type == 'modifier' {
    $prefix: '.';
  }

  @if $type == 'element' {
    $prefix: ' .';
  }

  @return '#{$selector}#{$prefix}#{$override}';
}
