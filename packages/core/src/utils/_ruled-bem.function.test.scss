/* stylelint-disable scss/function-no-unknown */
@use 'sass-true' as *;
@use './ruled-bem' as *;

@include describe('args-to-rules() parses parameters and returns a rule set. It is stored as a global object.') {
  @include it('sdsdsd') {
    $ruleSet: args-to-rules(
      (
        'block': 'blockName',
      )
    );

    @include assert-equal(is-rule-allowed($block: true), true);
    @include assert-equal(is-rule-allowed($content: true), true);
    @include assert-equal(is-rule-allowed($content: 'any'), true);
    @include assert-equal(is-rule-allowed($element: 'any'), true);
    @include assert-equal(is-rule-allowed($modifier: 'any'), true);
  }

  @include it('Modifiers') {
    @include it('If a modifier is true, all other modifiers are disallowed') {
      $ruleSet: args-to-rules(
        (
          'block': 'blockName',
          modifiers: (
            'mod1': true,
          ),
        )
      );

      @include assert-equal(is-rule-allowed($block: true), true);
      @include assert-equal(is-rule-allowed($content: true), true);
      @include assert-equal(is-rule-allowed($content: 'any'), true);

      ///@include assert-equal(is-rule-allowed($element: 'any'), true);
      @include assert-equal(is-rule-allowed($modifier: 'any'), false);
      @include assert-equal(is-rule-allowed($modifier: 'mod1'), true);
    }
  }
}
